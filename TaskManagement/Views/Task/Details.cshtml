@model TaskManagement.ViewModels.DetailViewModel
@{Layout = null;}


<nav class="navbar navbar-expand-lg navbar-light bg-secondary rounded">
    <div class="collapse navbar-collapse d-flex justify-content-center" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item px-4">
                <a class="nav_link" onclick="CreateEditTask('@Url.Action("UpdateTask","Task",new { id = Model.Id })','Редактирование задачи')" href="#">Изменить задачу</a>
            </li>
            <li class="nav-item px-4 border-end border-start">
                <form asp-controller="Task" asp-action="DeleteTask" asp-route-id="@Model.Id" onsubmit="return DeleteTask(this);">
                    <input type="submit" value="Удалить задачу" class="nav_link border-0" />
                </form>
            </li>
            @if (Model.Status != Status.Done)
            {
                <li class="nav-item px-4">
                    <a class="nav_link" onclick="CreateEditTask('@Url.Action("CreateSubTask","Task",new { parentId = Model.Id })','Добавление подзадачи')" href="#">Добавить подзадачу</a>
                </li>
            }
        </ul>
    </div>
</nav>
<form>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" disabled />
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" cols="20" rows="2" class="form-control" disabled></textarea>
    </div>
    <div class="form-group">
        <label asp-for="Executors" class="control-label"></label>
        <input asp-for="Executors" class="form-control" disabled />
    </div>
    <div class="form-group">
        <label asp-for="Status" class="control-label"></label>
        <select asp-items="Html.GetEnumSelectList(typeof(Status))" disabled asp-for="@Model.Status" class="form-select bg_img"></select>
    </div>
    <div class="form-group">
        <label asp-for="PlanTime" class="control-label"></label>
        <input asp-for="PlanTime" class="form-control" disabled />
    </div>
    @if (Model.SubTasks.Count != 0)
    {
        <h5 class="my-2">Список подзадач</h5>
        @foreach (var subTask in Model.SubTasks)
        {
            <p class="my-1">@subTask.Name . Плановое время выполнения: @subTask.PlanTime ч</p>
        }
    }
</form>
<div class="row py-3">
    @switch (Model.Status)
    {
        case Status.Assigned:
            <div class="col-6">
                <form asp-controller="Task" asp-action="ChangeStatusAssign" asp-route-id="@Model.Id" onsubmit="return UpdateStatus(this,@Model.Id)">
                    <input type="submit" value="Начать выполнение" class="btn btn_primary" />
                </form>
            </div>
            break;
        case Status.InProgress:
            <div class="col-6">
                <form asp-controller="Task" asp-action="ChangeStatusProgress" asp-route-button="done" asp-route-id="@Model.Id" onsubmit="return UpdateStatus(this,@Model.Id)">
                    <input type="submit" value="Завершить выполнение" class="btn btn_primary" />
                </form>
            </div>
            <div class="col-6 d-flex justify-content-end">
                <form asp-controller="Task" asp-action="ChangeStatusProgress" asp-route-button="pause" asp-route-id="@Model.Id" onsubmit="return UpdateStatus(this,@Model.Id)">
                    <input type="submit" value="Приостановить выполнение" class="btn btn_primary" />
                </form>
            </div>
            break;
        case Status.Suspended:
            <div class="col-6">
                <form asp-controller="Task" asp-action="ChangeStatusSuspended" asp-route-id="@Model.Id" onsubmit="return UpdateStatus(this,@Model.Id)">
                    <input type="submit" value="Возобновить выполнение" class="btn btn_primary" />
                </form>
            </div>
            break;
    }
</div>



